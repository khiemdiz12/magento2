
# Build and push image to Azure Container Registry; Deploy to Azure Kuberentes Services and setup Review App with Azure DevSpaces
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'f422e73d-7efb-4744-8ebd-66e34c869472'
  imageRepository: 'kubernetes'
  containerRegistry: 'teklegionacr.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'teklegionacr46ce-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Azure Service connection
  azureConnection: 'daf3107d-0537-4568-846c-ea02358af51e'


stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - upload: charts
      artifact: charts

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'khiemdiz12magento2.default'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          - task: AzureCLI@2
            displayName: get host suffix
            inputs:
              scriptType: pscore
              scriptLocation: inlineScript
              azureSubscription: $(azureConnection)
              inlineScript: |
                $resourceGroupName="TekLegion-Kube"
                $clusterName="TekLegion-Cluster"

                az aks use-dev-spaces -n $clusterName -g $resourceGroupName -s default -y
                $hostSuffix=$(azds show-context -o json | ConvertFrom-Json).controller.hostSuffix
                echo "##vso[task.setvariable variable=HostSuffix]$hostSuffix"

          - task: KubernetesManifest@0
            displayName: Bake manifests
            name: bake
            inputs:
              action: bake
              helmChart: $(Pipeline.Workspace)/charts/devspaces-0.1.0.tgz
              overrides: |
                image.repository:$(containerRegistry)/$(imageRepository)
                service.port:443
                ingress.enabled:true
                ingress.hosts[0].name:app.$(HostSuffix)
                ingress.hosts[0].paths[0]:/

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(bake.manifestsBundle)
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)

